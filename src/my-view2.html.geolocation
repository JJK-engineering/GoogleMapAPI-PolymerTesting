<!-- my-view2.html  testing google-maps-api -->

<link rel="import" href="../bower_components/polymer/polymer-element.html">
<link rel="import" href="shared-styles.html">
<link rel="import" href="../bower_components/google-apis/google-maps-api.html">

<dom-module id="my-view2">
    <template>
    <style include="shared-styles">
     :host {
	 display: block;
         padding: 10px;
     }     
     #map {
	 position: absolute;
	 width: 95%;
	 height:calc(85% - 0px);
     }
    </style>

    <div>
	<google-maps-api id="map" api-key="AIzaSyCy71TCJa_xLJQbCCdZu4dtYMNh8Nav7zw"
			 version="3.exp">
	</google-maps-api>
    </div>
  </template>

  <script>
   class MyView2 extends Polymer.Element {
       static get is() { return 'my-view2'; }
       
       ready() {
	   super.ready();
	   var mapsAPI = this.shadowRoot.querySelector('google-maps-api');
	   mapsAPI.addEventListener('api-load', function(e) {
	       // this.api === google.maps
	       this.map = new google.maps.Map(mapsAPI, {
		   center: {lat: 47.190215, lng: 8.821755},		    
		   zoom: 13,
		   mapTypeId: 'satellite',
	       });

	       var testloc = {lat: 47.190215, lng: 8.821755};
	       var marker = new google.maps.Marker({                
		   position: testloc,
		   map: this.map
	       });

	       var flightPlanCoordinates = [
		   {lat: 37.772, lng: -122.214},
		   {lat: 21.291, lng: -157.821},
		   {lat: -18.142, lng: 178.431},
		   {lat: -27.467, lng: 153.027}
	       ];
	       var flightPath = new google.maps.Polyline({
		   path: flightPlanCoordinates,
		   geodesic: true,
		   strokeColor: '#FF0000',
		   strokeOpacity: 1.0,
		   strokeWeight: 2,
		   map: this.map
	       });

	       
	       // Try HTML5 geolocation.
               var infoWindow = new google.maps.InfoWindow;
	       
	       if (navigator.geolocation) {
		   navigator.geolocation.getCurrentPosition(function(position) {
		       var pos = {
			   lat: position.coords.latitude,
			   lng: position.coords.longitude
		       };
		       
		       infoWindow.setPosition(pos);
		       infoWindow.setContent('Location found.');
		       infoWindow.open(this.map);
		       this.map.setCenter(pos);
		   }, handleLocationError(true, infoWindow, this.map.getCenter()) );
	       } else {
		   // Browser doesn't support Geolocation
		   handleLocationError(false, infoWindow, this.map.getCenter());
	       }
	       
	       function handleLocationError(browserHasGeolocation, infoWindow, pos) {
		   infoWindow.setPosition(pos);
		   infoWindow.setContent(browserHasGeolocation ?
					 'Error: The Geolocation service failed.' :
					 'Error: Your browser doesn\'t support geolocation.');
		   infoWindow.open(window.map);
	       }

	       
	   });	   
       }
   }

   window.customElements.define(MyView2.is, MyView2);   
  </script>
</dom-module>
